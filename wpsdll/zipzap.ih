
/*
 * This file was generated by the SOM Compiler.
 * FileName: H:\ZIPZAP\WPSDLL\zipzap.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emitih: 2.42
 */

/*
 *    ZIPZAP.IDL - A WorkFrame/2* Quickstart WPS/SOM application
 */


/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_zipzapfile_ih
#define SOM_zipzapfile_ih

#pragma checkout(suspend)

/*
 * Passthru lines: File: "C.ih", "before"
 */

 /* PM and OS2 include directives */
   #define INCL_WIN
   #define INCL_DOS
   #define INCL_DOSPROCESS
   #define INCL_DOSERRORS
   #define INCL_INCL_WINWORKPLACE
   #define INCL_GPIBITMAPS
   #define INCL_DOSMODULEMGR
   #define INCL_DOSFILEMGR
   #define INCL_DOSSESMGR
   #define INCL_DOSQUEUES
   #include <os2.h>
   #include <process.h>
   #include <stdlib.h>
   #include <stdio.h>

 /* WPS include directives */
   #define INCL_WPCLASS
   #define INCL_WPFOLDER
   #include <pmwp.h>
   #include <wpfsys.h>
   #include <wpfolder.h>
   #include <wpdesk.h>
   #include <wpdataf.h>
   #include <wpobject.h>
   #include <wprootf.h>

 /* C include directives */
   #include <stdio.h>

 /* General constants */
   #define MY_SOMCLASSNAME             "zipzapfile"
   #define RESOURCE_MODULE             "ZIPZAPR"
   #define ZIPZAPFILE_ICON               "ZIPZAPFI.ICO"      /* Icon file */
   #define THREAD_STACK_SIZE           262144
   #define BUFFERSIZE                  256

/* Menu resource IDs */
   #define IDM_ZIPZAPFILE_MAIN             (WPMENUID_USER + 522)
   #define IDMFILE_ZIPZAPSETTINGS        (WPMENUID_USER + 523)
   #define IDM_ZIPZAP_UNZIPFILE            (WPMENUID_USER + 524)
   #define IDM_ZIPZAP_UNZIPME             (WPMENUID_USER + 525)
   #define IDM_ZIPZAP_ZIPTHIS               (WPMENUID_USER + 526)
   #define IDM_ZIPZAP_ADDTOZIP            (WPMENUID_USER + 527)
   #define ID_ZIPTHIS                             (WPMENUID_USER + 528)
   #define ID_ADDTOZIP                          (WPMENUID_USER + 529)
   #define IDM_ZIPZAP_ADDFOLDTOZIP  (WPMENUID_USER + 530)
   #define IDM_ZIPZAP_ADDTREETOZIP  (WPMENUID_USER + 531)
   #define IDM_ZIPZAP_ZIPFOL             (WPMENUID_USER + 532)
   #define IDM_ZIPZAP_ZIPTRE             (WPMENUID_USER + 533)
   #define ID_ADDFOLDTOZIP               (WPMENUID_USER + 530)
   #define ID_ADDTREETOZIP               (WPMENUID_USER + 531)
   #define ID_ZIPFOL                          (WPMENUID_USER + 532)
   #define ID_ZIPTRE                         (WPMENUID_USER + 533)
   #define ID_OPENME                         (WPMENUID_USER + 534)
   #define IDM_ZIPZAP_SUNZIPME           (WPMENUID_USER + 535)
   #define IDM_ZIPZAP_CUNZIPME           (WPMENUID_USER + 536)
   #define ID_SZIPTHIS                          (WPMENUID_USER + 537)
   #define ID_CZIPTHIS                          (WPMENUID_USER + 538)
   #define ID_SZIPTRE                           (WPMENUID_USER + 539)
   #define ID_CZIPTRE                           (WPMENUID_USER + 540)
   #define ID_SZIPFOL                           (WPMENUID_USER + 541)
   #define ID_CZIPFOL                           (WPMENUID_USER + 542)
   #define IDM_ZIPZAP_UNZIPEXE            (WPMENUID_USER + 543)
   #define IDM_ZIPZAP_UNZIPEXEFILE      (WPMENUID_USER + 544)
   #define IDM_ZIPZAP_SUNZIPEXEFILE    (WPMENUID_USER + 545)
   #define IDM_ZIPZAP_CUNZIPEXEFILE    (WPMENUID_USER + 546)
   #define IDM_ZIPZAP_VIEWZIP             (WPMENUID_USER + 547)
   #define ID_VIEWZIP                          (WPMENUID_USER + 548)
   #define IDMFILE_SZIPZAPSETTINGS     (WPMENUID_USER + 549)
   #define IDM_ZIPZAP_CCREATENEW     (WPMENUID_USER + 550)
   #define IDM_ZIPZAP_CABOUTZIPZAP   (WPMENUID_USER + 551)

/* FIND ZIP */
   #define ID_FINDZIP                  3500

/* ICON FOR CONTAINER */
   #define ID_ICONFILE                 12600
   #define ID_ICONFOLD                12601
   #define ID_ICONZIP                  12602
   #define ID_ICONEXE                  12603

/* Custom Zip this file */
   #define ID_CZTDLG          7900
   #define ID_CZTDEST        7901
   #define ID_CZTARGS        7902
   #define ID_CZTOK            7905
   #define ID_CZTCANCEL     7906

/* Container Dialog */
   #define ID_CONTVIEW          6200
   #define ID_CONTOBJ            6201

/* Custom Unzip this file */
   #define ID_CUZTDLG          7800
   #define ID_CUZTDEST        7801
   #define ID_CUZTARGS        7802
   #define ID_CUZTOK            7805
   #define ID_CUZTCANCEL     7806

/* Custom Unzip this .EXE file */
   #define ID_CUZEXEDLG          8000
   #define ID_CUZEXEDEST        8001
   #define ID_CUZEXEOK            8005
   #define ID_CUZEXECANCEL     8006

/* NEWZIP SETTINGS PAGE */
   #define ID_NEWZIPSET                7000
   #define ID_REPLACEICON              7001
   #define ID_ENABLEUNZIPM             7002
   #define ID_DEFDEST                  7004
   #define ID_SHOWZIPSESSION           7005
   #define ID_AUTOCLOSESESSION         7006
   #define ID_AUTOOPENZIP              7007
   #define ID_AUTOOPENUNZIP            7008
   #define ID_CREATESHADOW             7009
   #define ID_AUTOOPENUNZIPPARENT      7010
   #define ID_CREATEDDSHADOW           7011
   #define ID_UNZIPDONEBEEP           7012
   #define ID_ZIPICONFILE           7014
   #define ID_ZIPICONFILELABEL           7018
   #define ID_ZIPZAPSETOK                   7013
   #define ID_ZIPZAPSETCANCEL            7015
   #define ID_UNZIPARGS                      7019
   #define ID_UNZIPARGSLABEL             7020
   #define ID_ENABLEDRAGDROP           7072
   #define ID_SHOWDDSESSION            7073
   #define ID_AUTOCLOSEDDSESSION       7074
   #define ID_BEEPONCOMPLETIONDD           7017
   #define ID_ENABLEZIPTHIS            7089
   #define ID_ENABLEADDTOZIP           7090
   #define ID_DEFFOLDDEST              7054
   #define ID_ENABLEZIPFOL           7052
   #define ID_ENABLEZIPTRE           7064
   #define ID_CREATEZDSHADOW           7057
   #define ID_AUTOOPENZIP              7007
   #define ID_SHOWFOLDSESSION          7055
   #define ID_AUTOCLOSEFOLDSESSION     7056
   #define ID_ZIPDONEBEEP                7067
   #define ID_ZIPARGS                7068
   #define ID_ZIPARGSLABEL                7060
   #define ID_CMDFILEEF                7060
   #define ID_ENABLEADDTOZIPF          468
   #define ID_ZIPZAPHELPBUTTON          7024
   #define ID_ADDITIONALSETBUTTON   7025

/* NEWZIP SETTINGS PAGE */
   #define ID_ADDITIONALSETDLG             1500
   #define ID_ENABLESHOWCONTENTS       1501
   #define ID_USEEXTVIEW               1502
   #define ID_EXTZVIEWEF               1503
   #define ID_DEFEDITORLABEL           1504
   #define ID_DEFEDITOREF              1505
   #define ID_VBOUTPUT                 1506
   #define ID_VOK                            1508
   #define ID_VBDOUBLECLICK            1509
   #define ID_VBMENUITEM                 1510
   #define ID_CREATETEMPLATE          1511
   #define ID_ZZREGC                         1512
   #define ID_ENABLEDCLICKVIEW          1517
   #define ID_EXTZVIEWEFLABEL          1516
   #define ID_DEFEDITOREFLABEL         1515
   #define ID_SHOWABOUTATBOOT        1514

/* About ZipZap */
   #define ID_ABOUTZIPZAP             1900

/* Create NEW .ZIP file */
   #define ID_CREATENEW             1100
   #define ID_CNENTRY                 1101
   #define ID_CNCREATE                1102
   #define ID_CNCANCEL                1103


/* Prototypes */
   MRESULT APIENTRY fnProdInfoWndProc (HWND, ULONG, MPARAM, MPARAM);
   int SOMprintf(const unsigned char*,...); 

#include <zipzap.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass zipzapfileCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define zipzapfile_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef struct {
	PSZ pszMyRealName;
} zipzapfileData;

/*
 * GetData macro
 */

/*
 * -- This emitter treats Data Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to override this default.
 */
typedef zipzapfileData* SOMLINK somTP_zipzapfile_DataThunk(void*);
#ifdef __IBMC__
#pragma linkage(somTP_zipzapfile_DataThunk, system)
#endif
typedef somTP_zipzapfile_DataThunk *somTD_zipzapfile_DataThunk;

#define zipzapfileGetData(somSelf) \
   (((somTD_zipzapfile_DataThunk)(zipzapfileCClassData.instanceDataToken))(somSelf))

/*
 * Instance variable and staticdata access macros
 */
#ifndef NO_VARIABLE_MACROS
#define _pszMyRealName (somThis->pszMyRealName)
#endif

/*
 * Primary Implementation File Support
 */
#if (defined(zipzapfile_Class_Source) || defined(SOM_Module_zipzap_Source))

/*
 * Trace/Debug macro
 */
#ifndef zipzapfileMethodDebug
   #define zipzapfileMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* zipzapfileMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_zipzapfileCClassData.parentMtab
#undef SOMInstance
#define SOMInstance zipzapfileCClassData.parentMtab

#ifndef M_zipzapfile_Class_Source
   #define M_zipzapfile_Class_Source
#endif    /* M_zipzapfile_Class_Source */

/*
 * Overridden method: wpViewObject
 */
#pragma linkage(zipzapfileX_wpViewObject, system)
SOM_Scope HWND  SOMLINK zipzapfileX_wpViewObject(zipzapfile *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
static char *somMN_zipzapfilewpViewObject = "WPObject::wpViewObject";
static somId somId_zipzapfilewpViewObject = &somMN_zipzapfilewpViewObject;
#ifdef somId_wpViewObject
#undef somId_wpViewObject
#else
#define somId_wpViewObject somId_zipzapfilewpViewObject
#endif
static somMethodProc* zipzapfile_parent_WPDataFile_wpViewObject_resolved;
#define zipzapfile_parent_WPDataFile_wpViewObject(somSelf,hwndCnr,ulView,param) \
  ((( somTD_WPObject_wpViewObject ) \
    zipzapfile_parent_WPDataFile_wpViewObject_resolved) \
	 (somSelf,hwndCnr,ulView,param))
#ifndef SOMGD_pmc_WPDataFile_wpViewObject
  #ifdef parent_WPDataFile_wpViewObject
     #undef parent_WPDataFile_wpViewObject
     #define SOMGD_pmc_WPDataFile_wpViewObject 1
  #else
     #define parent_WPDataFile_wpViewObject zipzapfile_parent_WPDataFile_wpViewObject
  #endif /* parent_WPDataFile_wpViewObject */
#endif /* SOMGD_pmc_WPDataFile_wpViewObject */
#ifndef parent_wpViewObject
     #define parent_wpViewObject zipzapfile_parent_WPDataFile_wpViewObject
#endif  /* parent_wpViewObject */
#define zipzapfile_parents_wpViewObject(somSelf,hwndCnr,ulView,param) (\
   zipzapfile_parent_WPDataFile_wpViewObject(somSelf,hwndCnr,ulView,param))

/*
 * Overridden method: wpDrop
 */
#pragma linkage(zipzapfileX_wpDrop, system)
SOM_Scope MRESULT  SOMLINK zipzapfileX_wpDrop(zipzapfile *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo,
		PDRAGITEM pdrgItem);
static char *somMN_zipzapfilewpDrop = "WPObject::wpDrop";
static somId somId_zipzapfilewpDrop = &somMN_zipzapfilewpDrop;
#ifdef somId_wpDrop
#undef somId_wpDrop
#else
#define somId_wpDrop somId_zipzapfilewpDrop
#endif
static somMethodProc* zipzapfile_parent_WPDataFile_wpDrop_resolved;
#define zipzapfile_parent_WPDataFile_wpDrop(somSelf,hwndCnr,pdrgInfo,pdrgItem) \
  ((( somTD_WPObject_wpDrop ) \
    zipzapfile_parent_WPDataFile_wpDrop_resolved) \
	 (somSelf,hwndCnr,pdrgInfo,pdrgItem))
#ifndef SOMGD_pmc_WPDataFile_wpDrop
  #ifdef parent_WPDataFile_wpDrop
     #undef parent_WPDataFile_wpDrop
     #define SOMGD_pmc_WPDataFile_wpDrop 1
  #else
     #define parent_WPDataFile_wpDrop zipzapfile_parent_WPDataFile_wpDrop
  #endif /* parent_WPDataFile_wpDrop */
#endif /* SOMGD_pmc_WPDataFile_wpDrop */
#ifndef parent_wpDrop
     #define parent_wpDrop zipzapfile_parent_WPDataFile_wpDrop
#endif  /* parent_wpDrop */
#define zipzapfile_parents_wpDrop(somSelf,hwndCnr,pdrgInfo,pdrgItem) (\
   zipzapfile_parent_WPDataFile_wpDrop(somSelf,hwndCnr,pdrgInfo,pdrgItem))

/*
 * Overridden method: wpDragOver
 */
#pragma linkage(zipzapfileX_wpDragOver, system)
SOM_Scope MRESULT  SOMLINK zipzapfileX_wpDragOver(zipzapfile *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo);
static char *somMN_zipzapfilewpDragOver = "WPObject::wpDragOver";
static somId somId_zipzapfilewpDragOver = &somMN_zipzapfilewpDragOver;
#ifdef somId_wpDragOver
#undef somId_wpDragOver
#else
#define somId_wpDragOver somId_zipzapfilewpDragOver
#endif
static somMethodProc* zipzapfile_parent_WPDataFile_wpDragOver_resolved;
#define zipzapfile_parent_WPDataFile_wpDragOver(somSelf,hwndCnr,pdrgInfo) \
  ((( somTD_WPObject_wpDragOver ) \
    zipzapfile_parent_WPDataFile_wpDragOver_resolved) \
	 (somSelf,hwndCnr,pdrgInfo))
#ifndef SOMGD_pmc_WPDataFile_wpDragOver
  #ifdef parent_WPDataFile_wpDragOver
     #undef parent_WPDataFile_wpDragOver
     #define SOMGD_pmc_WPDataFile_wpDragOver 1
  #else
     #define parent_WPDataFile_wpDragOver zipzapfile_parent_WPDataFile_wpDragOver
  #endif /* parent_WPDataFile_wpDragOver */
#endif /* SOMGD_pmc_WPDataFile_wpDragOver */
#ifndef parent_wpDragOver
     #define parent_wpDragOver zipzapfile_parent_WPDataFile_wpDragOver
#endif  /* parent_wpDragOver */
#define zipzapfile_parents_wpDragOver(somSelf,hwndCnr,pdrgInfo) (\
   zipzapfile_parent_WPDataFile_wpDragOver(somSelf,hwndCnr,pdrgInfo))

/*
 * Overridden method: wpModifyPopupMenu
 */
#pragma linkage(zipzapfileX_wpModifyPopupMenu, system)
SOM_Scope BOOL  SOMLINK zipzapfileX_wpModifyPopupMenu(zipzapfile *somSelf,
		HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition);
static char *somMN_zipzapfilewpModifyPopupMenu = "WPObject::wpModifyPopupMenu";
static somId somId_zipzapfilewpModifyPopupMenu = &somMN_zipzapfilewpModifyPopupMenu;
#ifdef somId_wpModifyPopupMenu
#undef somId_wpModifyPopupMenu
#else
#define somId_wpModifyPopupMenu somId_zipzapfilewpModifyPopupMenu
#endif
static somMethodProc* zipzapfile_parent_WPDataFile_wpModifyPopupMenu_resolved;
#define zipzapfile_parent_WPDataFile_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) \
  ((( somTD_WPObject_wpModifyPopupMenu ) \
    zipzapfile_parent_WPDataFile_wpModifyPopupMenu_resolved) \
	 (somSelf,hwndMenu,hwndCnr,iPosition))
#ifndef SOMGD_pmc_WPDataFile_wpModifyPopupMenu
  #ifdef parent_WPDataFile_wpModifyPopupMenu
     #undef parent_WPDataFile_wpModifyPopupMenu
     #define SOMGD_pmc_WPDataFile_wpModifyPopupMenu 1
  #else
     #define parent_WPDataFile_wpModifyPopupMenu zipzapfile_parent_WPDataFile_wpModifyPopupMenu
  #endif /* parent_WPDataFile_wpModifyPopupMenu */
#endif /* SOMGD_pmc_WPDataFile_wpModifyPopupMenu */
#ifndef parent_wpModifyPopupMenu
     #define parent_wpModifyPopupMenu zipzapfile_parent_WPDataFile_wpModifyPopupMenu
#endif  /* parent_wpModifyPopupMenu */
#define zipzapfile_parents_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) (\
   zipzapfile_parent_WPDataFile_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition))

/*
 * Overridden method: wpMenuItemSelected
 */
#pragma linkage(zipzapfileX_wpMenuItemSelected, system)
SOM_Scope BOOL  SOMLINK zipzapfileX_wpMenuItemSelected(zipzapfile *somSelf,
		HWND hwndFrame,
		ULONG ulMenuId);
static char *somMN_zipzapfilewpMenuItemSelected = "WPObject::wpMenuItemSelected";
static somId somId_zipzapfilewpMenuItemSelected = &somMN_zipzapfilewpMenuItemSelected;
#ifdef somId_wpMenuItemSelected
#undef somId_wpMenuItemSelected
#else
#define somId_wpMenuItemSelected somId_zipzapfilewpMenuItemSelected
#endif
static somMethodProc* zipzapfile_parent_WPDataFile_wpMenuItemSelected_resolved;
#define zipzapfile_parent_WPDataFile_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) \
  ((( somTD_WPObject_wpMenuItemSelected ) \
    zipzapfile_parent_WPDataFile_wpMenuItemSelected_resolved) \
	 (somSelf,hwndFrame,ulMenuId))
#ifndef SOMGD_pmc_WPDataFile_wpMenuItemSelected
  #ifdef parent_WPDataFile_wpMenuItemSelected
     #undef parent_WPDataFile_wpMenuItemSelected
     #define SOMGD_pmc_WPDataFile_wpMenuItemSelected 1
  #else
     #define parent_WPDataFile_wpMenuItemSelected zipzapfile_parent_WPDataFile_wpMenuItemSelected
  #endif /* parent_WPDataFile_wpMenuItemSelected */
#endif /* SOMGD_pmc_WPDataFile_wpMenuItemSelected */
#ifndef parent_wpMenuItemSelected
     #define parent_wpMenuItemSelected zipzapfile_parent_WPDataFile_wpMenuItemSelected
#endif  /* parent_wpMenuItemSelected */
#define zipzapfile_parents_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) (\
   zipzapfile_parent_WPDataFile_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId))

/*
 * Overridden method: wpSetIcon
 */
#pragma linkage(zipzapfileX_wpSetIcon, system)
SOM_Scope BOOL  SOMLINK zipzapfileX_wpSetIcon(zipzapfile *somSelf,
		HPOINTER hptrNewIcon);
static char *somMN_zipzapfilewpSetIcon = "WPObject::wpSetIcon";
static somId somId_zipzapfilewpSetIcon = &somMN_zipzapfilewpSetIcon;
#ifdef somId_wpSetIcon
#undef somId_wpSetIcon
#else
#define somId_wpSetIcon somId_zipzapfilewpSetIcon
#endif
static somMethodProc* zipzapfile_parent_WPDataFile_wpSetIcon_resolved;
#define zipzapfile_parent_WPDataFile_wpSetIcon(somSelf,hptrNewIcon) \
  ((( somTD_WPObject_wpSetIcon ) \
    zipzapfile_parent_WPDataFile_wpSetIcon_resolved) \
	 (somSelf,hptrNewIcon))
#ifndef SOMGD_pmc_WPDataFile_wpSetIcon
  #ifdef parent_WPDataFile_wpSetIcon
     #undef parent_WPDataFile_wpSetIcon
     #define SOMGD_pmc_WPDataFile_wpSetIcon 1
  #else
     #define parent_WPDataFile_wpSetIcon zipzapfile_parent_WPDataFile_wpSetIcon
  #endif /* parent_WPDataFile_wpSetIcon */
#endif /* SOMGD_pmc_WPDataFile_wpSetIcon */
#ifndef parent_wpSetIcon
     #define parent_wpSetIcon zipzapfile_parent_WPDataFile_wpSetIcon
#endif  /* parent_wpSetIcon */
#define zipzapfile_parents_wpSetIcon(somSelf,hptrNewIcon) (\
   zipzapfile_parent_WPDataFile_wpSetIcon(somSelf,hptrNewIcon))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct zipzapfileClassDataStructure SOMDLINK zipzapfileClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct zipzapfileCClassDataStructure SOMDLINK zipzapfileCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t zipzapfileOM[] = {
    {    &somId_zipzapfilewpViewObject,
         (somMethodProc *) zipzapfileX_wpViewObject    },
    {    &somId_zipzapfilewpDrop,
         (somMethodProc *) zipzapfileX_wpDrop    },
    {    &somId_zipzapfilewpDragOver,
         (somMethodProc *) zipzapfileX_wpDragOver    },
    {    &somId_zipzapfilewpModifyPopupMenu,
         (somMethodProc *) zipzapfileX_wpModifyPopupMenu    },
    {    &somId_zipzapfilewpMenuItemSelected,
         (somMethodProc *) zipzapfileX_wpMenuItemSelected    },
    {    &somId_zipzapfilewpSetIcon,
         (somMethodProc *) zipzapfileX_wpSetIcon    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_zipzapfile = "zipzapfile";
#ifndef somEMC_M_zipzapfile_defined
#define somEMC_M_zipzapfile_defined
static char * somEMC_M_zipzapfile = "M_zipzapfile";
#endif
static char * somPCN_zipzapfile_WPDataFile = "WPDataFile";

static somId somPCzipzapfile[] = {
    &somPCN_zipzapfile_WPDataFile,
};

static somStaticClassInfo zipzapfileSCI = {
    4, 0, 6, 0, 0, 0,
    zipzapfile_MajorVersion, zipzapfile_MinorVersion,
    sizeof(zipzapfileData), zipzapfile_MaxNoMethods, 1,
    &somCN_zipzapfile,
    &somEMC_M_zipzapfile, 0,
    somPCzipzapfile,
    (somClassDataStructure *) &zipzapfileClassData,
    (somCClassDataStructure *) &zipzapfileCClassData,
    (somStaticMethod_t *) NULL, zipzapfileOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK zipzapfileNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    WPDataFileNewClass(WPDataFile_MajorVersion,WPDataFile_MinorVersion);	/* static reference */
    /* Explicit metaclass, so get it */ 
    M_zipzapfileNewClass(M_zipzapfile_MajorVersion,M_zipzapfile_MinorVersion);	/* static reference */
    result = somBuildClass(1,&zipzapfileSCI, somtmajorVersion, somtminorVersion);
    zipzapfile_parent_WPDataFile_wpSetIcon_resolved = 
	somParentNumResolve(zipzapfileCClassData.parentMtab, 1, WPObjectClassData.wpSetIcon); 
    zipzapfile_parent_WPDataFile_wpMenuItemSelected_resolved = 
	somParentNumResolve(zipzapfileCClassData.parentMtab, 1, WPObjectClassData.wpMenuItemSelected); 
    zipzapfile_parent_WPDataFile_wpModifyPopupMenu_resolved = 
	somParentNumResolve(zipzapfileCClassData.parentMtab, 1, WPObjectClassData.wpModifyPopupMenu); 
    zipzapfile_parent_WPDataFile_wpDragOver_resolved = 
	somParentNumResolve(zipzapfileCClassData.parentMtab, 1, WPObjectClassData.wpDragOver); 
    zipzapfile_parent_WPDataFile_wpDrop_resolved = 
	somParentNumResolve(zipzapfileCClassData.parentMtab, 1, WPObjectClassData.wpDrop); 
    zipzapfile_parent_WPDataFile_wpViewObject_resolved = 
	somParentNumResolve(zipzapfileCClassData.parentMtab, 1, WPObjectClassData.wpViewObject); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_zipzapfile_ih */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_M_zipzapfile_ih
#define SOM_M_zipzapfile_ih

#pragma checkout(suspend)

#include <zipzap.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass M_zipzapfileCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define M_zipzapfile_MaxNoMethods 2

/*
 * -- Instance data
 */
typedef struct {
	M_zipzapfile_HMODULE hmodResource;
} M_zipzapfileData;

/*
 * GetData macro
 */

/*
 * -- This emitter treats Data Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to override this default.
 */
typedef M_zipzapfileData* SOMLINK somTP_M_zipzapfile_DataThunk(void*);
#ifdef __IBMC__
#pragma linkage(somTP_M_zipzapfile_DataThunk, system)
#endif
typedef somTP_M_zipzapfile_DataThunk *somTD_M_zipzapfile_DataThunk;

#define M_zipzapfileGetData(somSelf) \
   (((somTD_M_zipzapfile_DataThunk)(M_zipzapfileCClassData.instanceDataToken))(somSelf))

/*
 * Instance variable and staticdata access macros
 */
#ifndef NO_VARIABLE_MACROS
#define _hmodResource (somThis->hmodResource)
#endif

/*
 * Primary Implementation File Support
 */
#if (defined(zipzapfile_Class_Source) || defined(M_zipzapfile_Class_Source) || defined(SOM_Module_zipzap_Source))

/*
 * Trace/Debug macro
 */
#ifndef M_zipzapfileMethodDebug
   #define M_zipzapfileMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* M_zipzapfileMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Overridden method: wpclsInitData
 */
#pragma linkage(zipzapfileX_wpclsInitData, system)
SOM_Scope void  SOMLINK zipzapfileX_wpclsInitData(M_zipzapfile *somSelf);
static char *somMN_M_zipzapfilewpclsInitData = "M_WPObject::wpclsInitData";
static somId somId_M_zipzapfilewpclsInitData = &somMN_M_zipzapfilewpclsInitData;
#ifdef somId_wpclsInitData
#undef somId_wpclsInitData
#else
#define somId_wpclsInitData somId_M_zipzapfilewpclsInitData
#endif
static somMethodProc* M_zipzapfile_parent_M_WPDataFile_wpclsInitData_resolved;
#define M_zipzapfile_parent_M_WPDataFile_wpclsInitData(somSelf) \
  ((( somTD_M_WPObject_wpclsInitData ) \
    M_zipzapfile_parent_M_WPDataFile_wpclsInitData_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPDataFile_wpclsInitData
  #ifdef parent_M_WPDataFile_wpclsInitData
     #undef parent_M_WPDataFile_wpclsInitData
     #define SOMGD_pmc_M_WPDataFile_wpclsInitData 1
  #else
     #define parent_M_WPDataFile_wpclsInitData M_zipzapfile_parent_M_WPDataFile_wpclsInitData
  #endif /* parent_M_WPDataFile_wpclsInitData */
#endif /* SOMGD_pmc_M_WPDataFile_wpclsInitData */
#ifndef parent_wpclsInitData
     #define parent_wpclsInitData M_zipzapfile_parent_M_WPDataFile_wpclsInitData
#endif  /* parent_wpclsInitData */
#define M_zipzapfile_parents_wpclsInitData(somSelf) (\
   M_zipzapfile_parent_M_WPDataFile_wpclsInitData(somSelf))

/*
 * Overridden method: wpclsUnInitData
 */
#pragma linkage(zipzapfileX_wpclsUnInitData, system)
SOM_Scope void  SOMLINK zipzapfileX_wpclsUnInitData(M_zipzapfile *somSelf);
static char *somMN_M_zipzapfilewpclsUnInitData = "M_WPObject::wpclsUnInitData";
static somId somId_M_zipzapfilewpclsUnInitData = &somMN_M_zipzapfilewpclsUnInitData;
#ifdef somId_wpclsUnInitData
#undef somId_wpclsUnInitData
#else
#define somId_wpclsUnInitData somId_M_zipzapfilewpclsUnInitData
#endif
static somMethodProc* M_zipzapfile_parent_M_WPDataFile_wpclsUnInitData_resolved;
#define M_zipzapfile_parent_M_WPDataFile_wpclsUnInitData(somSelf) \
  ((( somTD_M_WPObject_wpclsUnInitData ) \
    M_zipzapfile_parent_M_WPDataFile_wpclsUnInitData_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPDataFile_wpclsUnInitData
  #ifdef parent_M_WPDataFile_wpclsUnInitData
     #undef parent_M_WPDataFile_wpclsUnInitData
     #define SOMGD_pmc_M_WPDataFile_wpclsUnInitData 1
  #else
     #define parent_M_WPDataFile_wpclsUnInitData M_zipzapfile_parent_M_WPDataFile_wpclsUnInitData
  #endif /* parent_M_WPDataFile_wpclsUnInitData */
#endif /* SOMGD_pmc_M_WPDataFile_wpclsUnInitData */
#ifndef parent_wpclsUnInitData
     #define parent_wpclsUnInitData M_zipzapfile_parent_M_WPDataFile_wpclsUnInitData
#endif  /* parent_wpclsUnInitData */
#define M_zipzapfile_parents_wpclsUnInitData(somSelf) (\
   M_zipzapfile_parent_M_WPDataFile_wpclsUnInitData(somSelf))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct M_zipzapfileClassDataStructure SOMDLINK M_zipzapfileClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct M_zipzapfileCClassDataStructure SOMDLINK M_zipzapfileCClassData = {(somMethodTabs) NULL};

/*
 * New Method: _get_hmodResource
 */
#pragma linkage(zipzapfileX__get_hmodResource, system)
SOM_Scope M_zipzapfile_HMODULE  SOMLINK zipzapfileX__get_hmodResource(M_zipzapfile *somSelf);
#ifndef somMN__get_hmodResource_defined
#define somMN__get_hmodResource_defined
static char *somMN__get_hmodResource = "_get_hmodResource";
static somId somId__get_hmodResource = &somMN__get_hmodResource;
#endif  /* somMN__get_hmodResource_defined */
#ifndef somDS__get_hmodResource_defined
#define somDS__get_hmodResource_defined
static char *somDS__get_hmodResource = "::M_zipzapfile::_get_hmodResource";
static somId somDI__get_hmodResource = &somDS__get_hmodResource;
#endif  /* somDS__get_hmodResource_defined */
#define zipzapfileC__get_hmodResource_somApRdDefault

/*
 * New Method: _set_hmodResource
 */
#pragma linkage(zipzapfileX__set_hmodResource, system)
SOM_Scope void  SOMLINK zipzapfileX__set_hmodResource(M_zipzapfile *somSelf,
		M_zipzapfile_HMODULE hmodResource);
#ifndef somMN__set_hmodResource_defined
#define somMN__set_hmodResource_defined
static char *somMN__set_hmodResource = "_set_hmodResource";
static somId somId__set_hmodResource = &somMN__set_hmodResource;
#endif  /* somMN__set_hmodResource_defined */
#ifndef somDS__set_hmodResource_defined
#define somDS__set_hmodResource_defined
static char *somDS__set_hmodResource = "::M_zipzapfile::_set_hmodResource";
static somId somDI__set_hmodResource = &somDS__set_hmodResource;
#endif  /* somDS__set_hmodResource_defined */
#define zipzapfileC__set_hmodResource_somApRdDefault

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t M_zipzapfileSM[] = {
    {    &M_zipzapfileClassData._get_hmodResource,
         &somId__get_hmodResource,
         &somDI__get_hmodResource,
         (somMethodProc *) zipzapfileX__get_hmodResource,
         (somMethodProc *)((void*)-1),
#ifdef zipzapfileC__get_hmodResource_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&zipzapfileC__get_hmodResourceStubs) },
#endif
    {    &M_zipzapfileClassData._set_hmodResource,
         &somId__set_hmodResource,
         &somDI__set_hmodResource,
         (somMethodProc *) zipzapfileX__set_hmodResource,
         (somMethodProc *)((void*)-1),
#ifdef zipzapfileC__set_hmodResource_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&zipzapfileC__set_hmodResourceStubs) },
#endif
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_zipzapfileOM[] = {
    {    &somId_M_zipzapfilewpclsInitData,
         (somMethodProc *) zipzapfileX_wpclsInitData    },
    {    &somId_M_zipzapfilewpclsUnInitData,
         (somMethodProc *) zipzapfileX_wpclsUnInitData    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_M_zipzapfile = "M_zipzapfile";
static char * somPCN_M_zipzapfile_M_WPDataFile = "M_WPDataFile";

static somId somPCM_zipzapfile[] = {
    &somPCN_M_zipzapfile_M_WPDataFile,
};

static somStaticClassInfo M_zipzapfileSCI = {
    4, 2, 2, 0, 0, 0,
    M_zipzapfile_MajorVersion, M_zipzapfile_MinorVersion,
    sizeof(M_zipzapfileData), M_zipzapfile_MaxNoMethods, 1,
    &somCN_M_zipzapfile,
    (somId) NULL, 1,
    somPCM_zipzapfile,
    (somClassDataStructure *) &M_zipzapfileClassData,
    (somCClassDataStructure *) &M_zipzapfileCClassData,
    M_zipzapfileSM, M_zipzapfileOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    2, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK M_zipzapfileNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    M_WPDataFileNewClass(M_WPDataFile_MajorVersion,M_WPDataFile_MinorVersion);	/* static reference */
    result = somBuildClass(1,&M_zipzapfileSCI, somtmajorVersion, somtminorVersion);
    M_zipzapfile_parent_M_WPDataFile_wpclsUnInitData_resolved = 
	somParentNumResolve(M_zipzapfileCClassData.parentMtab, 1, M_WPObjectClassData.wpclsUnInitData); 
    M_zipzapfile_parent_M_WPDataFile_wpclsInitData_resolved = 
	somParentNumResolve(M_zipzapfileCClassData.parentMtab, 1, M_WPObjectClassData.wpclsInitData); 
    return result;
}

/*
 * Functions for attributes.
 */
SOM_Scope M_zipzapfile_HMODULE  SOMLINK zipzapfileX__get_hmodResource(M_zipzapfile *somSelf){
    M_zipzapfileData *somThis = M_zipzapfileGetData(somSelf);
    M_zipzapfileMethodDebug("M_zipzapfile","zipzapfileX__get_hmodResource");

    return (somThis->hmodResource);
}
SOM_Scope void  SOMLINK zipzapfileX__set_hmodResource(M_zipzapfile *somSelf,
		M_zipzapfile_HMODULE hmodResource){
    M_zipzapfileData *somThis = M_zipzapfileGetData(somSelf);
    M_zipzapfileMethodDebug("M_zipzapfile","zipzapfileX__set_hmodResource");

    somThis->hmodResource = hmodResource;
}

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_M_zipzapfile_ih */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_zipzapfolder_ih
#define SOM_zipzapfolder_ih

#pragma checkout(suspend)

/*
 * Passthru lines: File: "C.ih", "before"
 */

 /* PM and OS2 include directives */
   #define INCL_WIN
   #define INCL_DOS
   #define INCL_DOSFILEMGR
   #define INCL_DOSERRORS
   #define INCL_INCL_WINWORKPLACE
   #define INCL_GPIBITMAPS
   #define INCL_DOSMODULEMGR
   #define INCL_WININPUT
   #define INCL_DOSPROCESS
   #define INCL_WINWINDOWMGR
   #include <os2.h>
   #include <direct.h>

 /* WPS include directives */
   #define INCL_WPCLASS
   #define INCL_WPFOLDER
   #include <pmwp.h>
   #include <wpdesk.h>
   #include <wprootf.h>
   #include <wpdisk.h>
   #include <wpobject.h>
   #include <wpshadow.h>
   #include <wpdataf.h>
   #include <wptemps.h>
   #include <wppgm.h>

 /* C include directives */
   #include <stdio.h>
   #include <string.h>

 /* General constants */
   #define RESOURCE_MODULE             "ZIPZAPR"
   #define ZIPZAPFOLDER_ICON               "ZIPZAPFO.ICO"      /* Icon file */
   #define THREAD_STACK_SIZE           262144
   #define BUFFERSIZE                  256

 /* Menu items */
   #define ID_F12KEY          7021
   #define ID_F11KEY          7022

/* String resource IDs */
   #define IDS_BASE                    12000

/* Product info dialog IDs */
   #define IDD_BASE                    14000

/* Icon resource IDs */
   #define IDI_MYICON                  15000

/* Prototypes */
   MRESULT APIENTRY fnProdInfoWndProc (HWND, ULONG, MPARAM, MPARAM);
   int SOMprintf(const unsigned char*,...); 

#include <zipzap.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass zipzapfolderCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define zipzapfolder_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef struct {
	PSZ pszMyRealName;
} zipzapfolderData;

/*
 * GetData macro
 */

/*
 * -- This emitter treats Data Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to override this default.
 */
typedef zipzapfolderData* SOMLINK somTP_zipzapfolder_DataThunk(void*);
#ifdef __IBMC__
#pragma linkage(somTP_zipzapfolder_DataThunk, system)
#endif
typedef somTP_zipzapfolder_DataThunk *somTD_zipzapfolder_DataThunk;

#define zipzapfolderGetData(somSelf) \
   (((somTD_zipzapfolder_DataThunk)(zipzapfolderCClassData.instanceDataToken))(somSelf))

/*
 * Instance variable and staticdata access macros
 */
#ifndef NO_VARIABLE_MACROS
#define _pszMyRealName (somThis->pszMyRealName)
#endif

/*
 * Primary Implementation File Support
 */
#if (defined(zipzapfolder_Class_Source) || defined(SOM_Module_zipzap_Source))

/*
 * Trace/Debug macro
 */
#ifndef zipzapfolderMethodDebug
   #define zipzapfolderMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* zipzapfolderMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_zipzapfolderCClassData.parentMtab
#undef SOMInstance
#define SOMInstance zipzapfolderCClassData.parentMtab

#ifndef M_zipzapfolder_Class_Source
   #define M_zipzapfolder_Class_Source
#endif    /* M_zipzapfolder_Class_Source */

/*
 * Overridden method: wpModifyPopupMenu
 */
#pragma linkage(zipzapfolderX_wpModifyPopupMenu, system)
SOM_Scope BOOL  SOMLINK zipzapfolderX_wpModifyPopupMenu(zipzapfolder *somSelf,
		HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition);
static char *somMN_zipzapfolderwpModifyPopupMenu = "WPObject::wpModifyPopupMenu";
static somId somId_zipzapfolderwpModifyPopupMenu = &somMN_zipzapfolderwpModifyPopupMenu;
#ifdef somId_wpModifyPopupMenu
#undef somId_wpModifyPopupMenu
#else
#define somId_wpModifyPopupMenu somId_zipzapfolderwpModifyPopupMenu
#endif
static somMethodProc* zipzapfolder_parent_WPFolder_wpModifyPopupMenu_resolved;
#define zipzapfolder_parent_WPFolder_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) \
  ((( somTD_WPObject_wpModifyPopupMenu ) \
    zipzapfolder_parent_WPFolder_wpModifyPopupMenu_resolved) \
	 (somSelf,hwndMenu,hwndCnr,iPosition))
#ifndef SOMGD_pmc_WPFolder_wpModifyPopupMenu
  #ifdef parent_WPFolder_wpModifyPopupMenu
     #undef parent_WPFolder_wpModifyPopupMenu
     #define SOMGD_pmc_WPFolder_wpModifyPopupMenu 1
  #else
     #define parent_WPFolder_wpModifyPopupMenu zipzapfolder_parent_WPFolder_wpModifyPopupMenu
  #endif /* parent_WPFolder_wpModifyPopupMenu */
#endif /* SOMGD_pmc_WPFolder_wpModifyPopupMenu */
#ifndef parent_wpModifyPopupMenu
     #define parent_wpModifyPopupMenu zipzapfolder_parent_WPFolder_wpModifyPopupMenu
#endif  /* parent_wpModifyPopupMenu */
#define zipzapfolder_parents_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) (\
   zipzapfolder_parent_WPFolder_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition))

/*
 * Overridden method: wpMenuItemSelected
 */
#pragma linkage(zipzapfolderX_wpMenuItemSelected, system)
SOM_Scope BOOL  SOMLINK zipzapfolderX_wpMenuItemSelected(zipzapfolder *somSelf,
		HWND hwndFrame,
		ULONG ulMenuId);
static char *somMN_zipzapfolderwpMenuItemSelected = "WPObject::wpMenuItemSelected";
static somId somId_zipzapfolderwpMenuItemSelected = &somMN_zipzapfolderwpMenuItemSelected;
#ifdef somId_wpMenuItemSelected
#undef somId_wpMenuItemSelected
#else
#define somId_wpMenuItemSelected somId_zipzapfolderwpMenuItemSelected
#endif
static somMethodProc* zipzapfolder_parent_WPFolder_wpMenuItemSelected_resolved;
#define zipzapfolder_parent_WPFolder_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) \
  ((( somTD_WPObject_wpMenuItemSelected ) \
    zipzapfolder_parent_WPFolder_wpMenuItemSelected_resolved) \
	 (somSelf,hwndFrame,ulMenuId))
#ifndef SOMGD_pmc_WPFolder_wpMenuItemSelected
  #ifdef parent_WPFolder_wpMenuItemSelected
     #undef parent_WPFolder_wpMenuItemSelected
     #define SOMGD_pmc_WPFolder_wpMenuItemSelected 1
  #else
     #define parent_WPFolder_wpMenuItemSelected zipzapfolder_parent_WPFolder_wpMenuItemSelected
  #endif /* parent_WPFolder_wpMenuItemSelected */
#endif /* SOMGD_pmc_WPFolder_wpMenuItemSelected */
#ifndef parent_wpMenuItemSelected
     #define parent_wpMenuItemSelected zipzapfolder_parent_WPFolder_wpMenuItemSelected
#endif  /* parent_wpMenuItemSelected */
#define zipzapfolder_parents_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) (\
   zipzapfolder_parent_WPFolder_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId))

/*
 * Overridden method: wpOpen
 */
#pragma linkage(zipzapfolderX_wpOpen, system)
SOM_Scope HWND  SOMLINK zipzapfolderX_wpOpen(zipzapfolder *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
static char *somMN_zipzapfolderwpOpen = "WPObject::wpOpen";
static somId somId_zipzapfolderwpOpen = &somMN_zipzapfolderwpOpen;
#ifdef somId_wpOpen
#undef somId_wpOpen
#else
#define somId_wpOpen somId_zipzapfolderwpOpen
#endif
static somMethodProc* zipzapfolder_parent_WPFolder_wpOpen_resolved;
#define zipzapfolder_parent_WPFolder_wpOpen(somSelf,hwndCnr,ulView,param) \
  ((( somTD_WPObject_wpOpen ) \
    zipzapfolder_parent_WPFolder_wpOpen_resolved) \
	 (somSelf,hwndCnr,ulView,param))
#ifndef SOMGD_pmc_WPFolder_wpOpen
  #ifdef parent_WPFolder_wpOpen
     #undef parent_WPFolder_wpOpen
     #define SOMGD_pmc_WPFolder_wpOpen 1
  #else
     #define parent_WPFolder_wpOpen zipzapfolder_parent_WPFolder_wpOpen
  #endif /* parent_WPFolder_wpOpen */
#endif /* SOMGD_pmc_WPFolder_wpOpen */
#ifndef parent_wpOpen
     #define parent_wpOpen zipzapfolder_parent_WPFolder_wpOpen
#endif  /* parent_wpOpen */
#define zipzapfolder_parents_wpOpen(somSelf,hwndCnr,ulView,param) (\
   zipzapfolder_parent_WPFolder_wpOpen(somSelf,hwndCnr,ulView,param))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct zipzapfolderClassDataStructure SOMDLINK zipzapfolderClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct zipzapfolderCClassDataStructure SOMDLINK zipzapfolderCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t zipzapfolderOM[] = {
    {    &somId_zipzapfolderwpModifyPopupMenu,
         (somMethodProc *) zipzapfolderX_wpModifyPopupMenu    },
    {    &somId_zipzapfolderwpMenuItemSelected,
         (somMethodProc *) zipzapfolderX_wpMenuItemSelected    },
    {    &somId_zipzapfolderwpOpen,
         (somMethodProc *) zipzapfolderX_wpOpen    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_zipzapfolder = "zipzapfolder";
#ifndef somEMC_M_zipzapfolder_defined
#define somEMC_M_zipzapfolder_defined
static char * somEMC_M_zipzapfolder = "M_zipzapfolder";
#endif
static char * somPCN_zipzapfolder_WPFolder = "WPFolder";

static somId somPCzipzapfolder[] = {
    &somPCN_zipzapfolder_WPFolder,
};

static somStaticClassInfo zipzapfolderSCI = {
    4, 0, 3, 0, 0, 0,
    zipzapfolder_MajorVersion, zipzapfolder_MinorVersion,
    sizeof(zipzapfolderData), zipzapfolder_MaxNoMethods, 1,
    &somCN_zipzapfolder,
    &somEMC_M_zipzapfolder, 0,
    somPCzipzapfolder,
    (somClassDataStructure *) &zipzapfolderClassData,
    (somCClassDataStructure *) &zipzapfolderCClassData,
    (somStaticMethod_t *) NULL, zipzapfolderOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK zipzapfolderNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    WPFolderNewClass(WPFolder_MajorVersion,WPFolder_MinorVersion);	/* static reference */
    /* Explicit metaclass, so get it */ 
    M_zipzapfolderNewClass(M_zipzapfolder_MajorVersion,M_zipzapfolder_MinorVersion);	/* static reference */
    result = somBuildClass(1,&zipzapfolderSCI, somtmajorVersion, somtminorVersion);
    zipzapfolder_parent_WPFolder_wpOpen_resolved = 
	somParentNumResolve(zipzapfolderCClassData.parentMtab, 1, WPObjectClassData.wpOpen); 
    zipzapfolder_parent_WPFolder_wpMenuItemSelected_resolved = 
	somParentNumResolve(zipzapfolderCClassData.parentMtab, 1, WPObjectClassData.wpMenuItemSelected); 
    zipzapfolder_parent_WPFolder_wpModifyPopupMenu_resolved = 
	somParentNumResolve(zipzapfolderCClassData.parentMtab, 1, WPObjectClassData.wpModifyPopupMenu); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_zipzapfolder_ih */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_M_zipzapfolder_ih
#define SOM_M_zipzapfolder_ih

#pragma checkout(suspend)

#include <zipzap.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass M_zipzapfolderCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define M_zipzapfolder_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef struct {
	HMODULE hResource;
} M_zipzapfolderData;

/*
 * GetData macro
 */

/*
 * -- This emitter treats Data Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to override this default.
 */
typedef M_zipzapfolderData* SOMLINK somTP_M_zipzapfolder_DataThunk(void*);
#ifdef __IBMC__
#pragma linkage(somTP_M_zipzapfolder_DataThunk, system)
#endif
typedef somTP_M_zipzapfolder_DataThunk *somTD_M_zipzapfolder_DataThunk;

#define M_zipzapfolderGetData(somSelf) \
   (((somTD_M_zipzapfolder_DataThunk)(M_zipzapfolderCClassData.instanceDataToken))(somSelf))

/*
 * Instance variable and staticdata access macros
 */
#ifndef NO_VARIABLE_MACROS
#define _hResource (somThis->hResource)
#endif

/*
 * Primary Implementation File Support
 */
#if (defined(zipzapfolder_Class_Source) || defined(M_zipzapfolder_Class_Source) || defined(SOM_Module_zipzap_Source))

/*
 * Trace/Debug macro
 */
#ifndef M_zipzapfolderMethodDebug
   #define M_zipzapfolderMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* M_zipzapfolderMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Overridden method: wpclsInitData
 */
#pragma linkage(zipzapfolderX_wpclsInitData, system)
SOM_Scope void  SOMLINK zipzapfolderX_wpclsInitData(M_zipzapfolder *somSelf);
static char *somMN_M_zipzapfolderwpclsInitData = "M_WPObject::wpclsInitData";
static somId somId_M_zipzapfolderwpclsInitData = &somMN_M_zipzapfolderwpclsInitData;
#ifdef somId_wpclsInitData
#undef somId_wpclsInitData
#else
#define somId_wpclsInitData somId_M_zipzapfolderwpclsInitData
#endif
static somMethodProc* M_zipzapfolder_parent_M_WPFolder_wpclsInitData_resolved;
#define M_zipzapfolder_parent_M_WPFolder_wpclsInitData(somSelf) \
  ((( somTD_M_WPObject_wpclsInitData ) \
    M_zipzapfolder_parent_M_WPFolder_wpclsInitData_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPFolder_wpclsInitData
  #ifdef parent_M_WPFolder_wpclsInitData
     #undef parent_M_WPFolder_wpclsInitData
     #define SOMGD_pmc_M_WPFolder_wpclsInitData 1
  #else
     #define parent_M_WPFolder_wpclsInitData M_zipzapfolder_parent_M_WPFolder_wpclsInitData
  #endif /* parent_M_WPFolder_wpclsInitData */
#endif /* SOMGD_pmc_M_WPFolder_wpclsInitData */
#ifndef parent_wpclsInitData
     #define parent_wpclsInitData M_zipzapfolder_parent_M_WPFolder_wpclsInitData
#endif  /* parent_wpclsInitData */
#define M_zipzapfolder_parents_wpclsInitData(somSelf) (\
   M_zipzapfolder_parent_M_WPFolder_wpclsInitData(somSelf))

/*
 * Overridden method: wpclsUnInitData
 */
#pragma linkage(zipzapfolderX_wpclsUnInitData, system)
SOM_Scope void  SOMLINK zipzapfolderX_wpclsUnInitData(M_zipzapfolder *somSelf);
static char *somMN_M_zipzapfolderwpclsUnInitData = "M_WPObject::wpclsUnInitData";
static somId somId_M_zipzapfolderwpclsUnInitData = &somMN_M_zipzapfolderwpclsUnInitData;
#ifdef somId_wpclsUnInitData
#undef somId_wpclsUnInitData
#else
#define somId_wpclsUnInitData somId_M_zipzapfolderwpclsUnInitData
#endif
static somMethodProc* M_zipzapfolder_parent_M_WPFolder_wpclsUnInitData_resolved;
#define M_zipzapfolder_parent_M_WPFolder_wpclsUnInitData(somSelf) \
  ((( somTD_M_WPObject_wpclsUnInitData ) \
    M_zipzapfolder_parent_M_WPFolder_wpclsUnInitData_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPFolder_wpclsUnInitData
  #ifdef parent_M_WPFolder_wpclsUnInitData
     #undef parent_M_WPFolder_wpclsUnInitData
     #define SOMGD_pmc_M_WPFolder_wpclsUnInitData 1
  #else
     #define parent_M_WPFolder_wpclsUnInitData M_zipzapfolder_parent_M_WPFolder_wpclsUnInitData
  #endif /* parent_M_WPFolder_wpclsUnInitData */
#endif /* SOMGD_pmc_M_WPFolder_wpclsUnInitData */
#ifndef parent_wpclsUnInitData
     #define parent_wpclsUnInitData M_zipzapfolder_parent_M_WPFolder_wpclsUnInitData
#endif  /* parent_wpclsUnInitData */
#define M_zipzapfolder_parents_wpclsUnInitData(somSelf) (\
   M_zipzapfolder_parent_M_WPFolder_wpclsUnInitData(somSelf))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct M_zipzapfolderClassDataStructure SOMDLINK M_zipzapfolderClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct M_zipzapfolderCClassDataStructure SOMDLINK M_zipzapfolderCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_zipzapfolderOM[] = {
    {    &somId_M_zipzapfolderwpclsInitData,
         (somMethodProc *) zipzapfolderX_wpclsInitData    },
    {    &somId_M_zipzapfolderwpclsUnInitData,
         (somMethodProc *) zipzapfolderX_wpclsUnInitData    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_M_zipzapfolder = "M_zipzapfolder";
static char * somPCN_M_zipzapfolder_M_WPFolder = "M_WPFolder";

static somId somPCM_zipzapfolder[] = {
    &somPCN_M_zipzapfolder_M_WPFolder,
};

static somStaticClassInfo M_zipzapfolderSCI = {
    4, 0, 2, 0, 0, 0,
    M_zipzapfolder_MajorVersion, M_zipzapfolder_MinorVersion,
    sizeof(M_zipzapfolderData), M_zipzapfolder_MaxNoMethods, 1,
    &somCN_M_zipzapfolder,
    (somId) NULL, 1,
    somPCM_zipzapfolder,
    (somClassDataStructure *) &M_zipzapfolderClassData,
    (somCClassDataStructure *) &M_zipzapfolderCClassData,
    (somStaticMethod_t *) NULL, M_zipzapfolderOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    4, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK M_zipzapfolderNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    M_WPFolderNewClass(M_WPFolder_MajorVersion,M_WPFolder_MinorVersion);	/* static reference */
    result = somBuildClass(1,&M_zipzapfolderSCI, somtmajorVersion, somtminorVersion);
    M_zipzapfolder_parent_M_WPFolder_wpclsUnInitData_resolved = 
	somParentNumResolve(M_zipzapfolderCClassData.parentMtab, 1, M_WPObjectClassData.wpclsUnInitData); 
    M_zipzapfolder_parent_M_WPFolder_wpclsInitData_resolved = 
	somParentNumResolve(M_zipzapfolderCClassData.parentMtab, 1, M_WPObjectClassData.wpclsInitData); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_M_zipzapfolder_ih */
